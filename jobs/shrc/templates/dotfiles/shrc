#!/usr/bin/env bash
SHRC_DIR=/var/vcap/jobs/shrc

# get environment variables from ennvar
source $SHRC_DIR/dotfiles/envvars

# export extra shrc commands and bosh/bin to PATH
export PATH="$PATH:$SHRC_DIR/userbin"
export PATH="/var/vcap/bosh/bin:$PATH"

# use new inputrc.
export INPUTRC="$SHRC_DIR/dotfiles/inputrc"

# Add packages binaries to path
for pkg_bin in $(ls -d /var/vcap/packages/*/bin); do
  export PATH="$PATH:$pkg_bin"
done
unset pkg_bin

# Set PS1
source $SHRC_DIR/dotfiles/promptrc
set-ps1

# Symbol link safely
slink () {
  # if source exist
  if [[ -e $1 ]]; then
    # if symbol link doesnot exist
    if ! [[ -e $2 || -h $2 ]]; then
      ln -s $1 $2
    fi
  fi
}
slink /var/vcap/                $HOME/vcap
slink /var/vcap/packages/       $HOME/pkg
slink /var/vcap/jobs/           $HOME/jobs
slink /var/vcap/store/          $HOME/store
slink /var/vcap/sys/log/        $HOME/log
slink /var/vcap/monit/monit.log $HOME/monit.log

# Customized completions
# Run completion if exist
compl () {
  if [[ -e $1 ]]; then
    . $1
  fi
}
compl $SHRC_DIR/completes/wwsh.complete
compl $SHRC_DIR/completes/monit.complete

# Warden containers
slink /var/vcap/data/warden/depot/ $HOME/depot
# Link warden containers to $HOME/apps
if [[ -e /var/vcap/data/warden/depot/ ]] && which link_apps >/dev/null 2>&1; then
  # Since root privilege is needed for reading "instances.json",
  # If user is NOPASSWD sudoer, run link_apps, else throw a notice if failed.
  if sudo -n true; then
    sudo -n link_apps
  else
    echo "(っ˘ω˘ς ) Cannot auto link_apps, try sudo link_apps with your pw."
  fi
fi

# aliases
alias monit="sudo monit"
alias sms="monit summary"
alias m="monit"
alias link_apps="sudo link_apps"
alias show-bosh-properties="sudo cat $SHRC_DIR/dotfiles/properties.yml"

# Extra commands from manifest
if [ -e $SHRC_DIR/dotfiles/extrarc ]; then
  . $SHRC_DIR/dotfiles/extrarc
fi
