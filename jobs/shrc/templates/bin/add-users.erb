#!/bin/bash
set -eu

function create_user {
  local user_name="$1"

  # If user doesnot exist, try to create it.
  if ! id -u "$user_name" >/dev/null 2>&1; then
    useradd -m -s /bin/bash "$user_name"
  fi

  # Add user to the following groups if exist:
  #   vcap: get permission as vcap group
  #   bosh_sudoers: Allow sudo without password
  #   bosh_sshers: Allow ssh on stemcells v3363+
  local bosh_special_group
  for bosh_special_group in vcap bosh_sudoers bosh_sshers; do
    if getent group "$bosh_special_group" >/dev/null 2>&1; then
      usermod -a -G "$bosh_special_group" "$user_name"
    fi
  done
}

function inject_key {
  local user_name="$1"
  local user_key="$2"

  local user_home=/home/"$user_name"
  mkdir -p "$user_home"/.ssh
  echo "$user_key" > "$user_home"/.ssh/authorized_keys
  chown -R "$user_name:$user_name" "$user_home"/.ssh
  chmod 700 "$user_home"/.ssh
  chmod 600 "$user_home"/.ssh/authorized_keys
}

function remove_keys {
  # BOOM
  rm -f /home/*/.ssh/authorized_keys
}

remove_keys
<% p('shrc.extra_users').each do | user |
  username = user['name']
  userkey = user['public_key']

  # Regex for sanity check
  name_regex = /^[a-z_][a-z0-9_.-]{0,30}$/
  key_regex = /^ssh-rsa AAAA[0-9A-Za-z\/+]+[=]{0,3}[ 0-9A-Za-z@_.-]*$/

  if username.match(name_regex) %>
create_user "<%= username %>"
<%  if (not userkey.nil?) and userkey.match(key_regex) %>
inject_key "<%= username %>" "<%= userkey %>"
<%  end
  end
end %>
